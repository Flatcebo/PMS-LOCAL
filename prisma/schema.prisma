generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int        @id @default(autoincrement())
  password     String
  email        String     @unique
  phonenumber  String     @unique
  image        String
  createAt     DateTime
  accessTime   DateTime
  departmentId Int
  Department   Department @relation(fields: [departmentId], references: [id])
  Resource     Resource[]
  Notice       Notice[]
  Project      Project[]
  Schedule     Schedule[]
  Task         Task[]
  File         File[]

  @@index([departmentId], map: "User_departmentId_fkey")
}

model Department {
  id      Int       @id @default(autoincrement())
  name    String
  User    User[]
  Project Project[]
}

model Resource {
  userId    Int
  projectId Int
  Project   Project @relation(fields: [projectId], references: [id])
  User      User    @relation(fields: [userId], references: [id])

  @@id([projectId, userId])
  @@index([projectId], map: "Resource_projectId_fkey")
}

model Notice {
  id         Int      @id @default(autoincrement())
  title      String
  content    String   @db.MediumText
  uploader   String
  yymmdd     DateTime
  categories String
  hashtag    String
  userId     Int
  User       User     @relation(fields: [userId], references: [id])

  @@index([userId], map: "Notice_userId_fkey")
}

model Project {
  id           Int        @id @default(autoincrement())
  name         String
  start        DateTime
  end          DateTime
  leader       String
  member       String
  departmentId Int
  Department   Department @relation(fields: [departmentId], references: [id])
  Resource     Resource[]
  User         User?      @relation(fields: [userId], references: [id])
  userId       Int?

  @@index([departmentId], map: "Project_departmentId_fkey")
}

model Schedule {
  id      Int      @id @default(autoincrement())
  title   String
  content String   @db.MediumText
  place   String
  start   DateTime
  end     DateTime
  userId  Int
  User    User     @relation(fields: [userId], references: [id])

  @@index([userId], map: "Schedule_userId_fkey")
}

model Task {
  id       Int    @id @default(autoincrement())
  com      String
  not      String
  tomorrow String
  userId   Int
  User     User   @relation(fields: [userId], references: [id])

  @@index([userId], map: "Task_userId_fkey")
}

model File {
  id      Int    @id @default(autoincrement())
  name    String
  comment String
  path    String
  userId  Int
  User    User   @relation(fields: [userId], references: [id])

  @@index([userId], map: "File_userId_fkey")
}
